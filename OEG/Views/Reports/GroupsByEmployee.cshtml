@model OEG.Models.GroupsByEmployeeViewModel


@{
    ViewBag.Title = "Programs History";
    Layout = "~/Views/Shared/_MemberLayout.cshtml";
}
<h1><i class="fa fa-dashboard fa-2x"></i> @ViewBag.Title <small>(for GL's)</small> </h1>


<div>
    <form action="/Reports/GroupsbyEmployee" method="post">
        <input type="hidden" id="Hidden_Employees" name="Hidden_Employees" value="@ViewBag.Hidden_Employees" />
        <div class="form-horizontal">
            <div class="row">
                <div class="col-md-6 col-lg-4">
                    <div class="form-group">
                        <label class="control-label col-md-6 col-lg-4">Employees:</label>
                        <div class="col-md-6 col-lg-8">
                            @if (User.IsInRole("Program Leader") || User.IsInRole("Group Leader") || User.IsInRole("Senior Manager") || User.IsInRole("School Coordinator"))
                            {
                                <label style="margin-top:7px;">@ViewBag.Hidden_Employees</label>
                            }
                            else
                            {
                                @Html.DropDownList("Employees", (SelectList)ViewBag.Employees, htmlAttributes: new { @class = "form-control", @multiple = "multiple" })
                            }
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <input type="submit" class="btn btn-lg btn-primary" value="Refresh Data" />
    </form>
</div>
<br />
<div class="pull-right">
    <h3>Total Effect Size: <span class="@(Model.SubTotal < 0 ? "negative" : "")"> @Model.SubTotal </span></h3>
</div>


<table class="table">
    <tr>
        <th>
            School
        </th>
        <th>
            Year Level
        </th>
        <th>
            Duration (Days)
        </th>
        <th>
            Venue
        </th>
        <th>
            Group
        </th>
        <th>
            Employee Name
        </th>
        <th>
            Year
        </th>
        <th>
            Job Code
        </th>
        <th>
            Avg. Pre
        </th>
        <th>
            Avg. Post
        </th>
        <th>
            Avg. Change
        </th>
        <th>
            Avg. Change %
        </th>
        <th>
            Effect Size
        </th>

    </tr>

    @{int i = 1;}
    @foreach (var item in Model.ReportData)
    {
        if (i % 10 == 0)
        {
            <tr>
                <th>
                    School
                </th>
                <th>
                    Year Level
                </th>
                <th>
                    Duration (Days)
                </th>
                <th>
                    Venue
                </th>
                <th>
                    Group
                </th>
                <th>
                    Employee Name
                </th>
                <th>
                    Year
                </th>
                <th>
                    Job Code
                </th>
                <th>
                    Avg. Pre
                </th>
                <th>
                    Avg. Post
                </th>
                <th>
                    Avg. Change
                </th>
                <th>
                    Avg. Change %
                </th>
                <th>
                    Effect Size
                </th>

            </tr>
        }
        i++;
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.School)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.yearlevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Days)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Venue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Group)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Post)
            </td>
            <td class="@(item.Change < 0 ? "negative" : "")">
                @Html.DisplayFor(modelItem => item.Change)
            </td>
            <td class="@(item.Change < 0 ? "negative" : "")">
                @Html.DisplayFor(modelItem => item.ChangePercent)%
            </td>
            <td class="@(item.Change < 0 ? "negative" : "")">
                @Html.DisplayFor(modelItem => item.EffectSize)
            </td>
        </tr>
    }

</table>
<script type="text/javascript">
    $(document).ready(function () {
        $('#Employees').multiselect({
            onChange: function (option, checked) {
                //get all of the selected tiems
                var values = $('#Employees option:selected');
                var selected = "";
                $(values).each(function (index, value) {
                    selected += $(value).prop('value') + ",";
                });
                selected = selected.substring(0, selected.length - 1);
                //update hidden field with comma delimited string for state persistance
                $("#Hidden_Employees").val(selected);
            },
            includeSelectAllOption: true
        });

        var optCol = $("#Hidden_Employees").val().split(',');
        //set them as checked
        $("#Employees").val(optCol);
        //refresh the control
        $("#Employees").multiselect("refresh");
    });

</script>
